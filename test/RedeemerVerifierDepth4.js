const { expect } = require("chai");

const { loadFixture } = require("@nomicfoundation/hardhat-network-helpers");

describe("Redeemer verifier contract depth 4", function () {
  async function deployVerifier() {
    const Verifier = await ethers.getContractFactory("RedeemerVerifierDepth4");
    const verifier = await Verifier.deploy();

    return verifier;
  }

  describe("Verification", function () {
    it("Should verify a correct proof", async function () {
      const verifier = await loadFixture(
        deployVerifier
      );
      // This is a valid proof
      const proof = '0x2adabe6276ed6f9eca06f4e2c5634a1b8dc053ec1e6687fed4427e435fd599912d067e82d77ae9f58c7567adccac801bac9d5be9da64ef64aed54f81198bfa6321fbe9b93a83a4492a032ed70e370231328ef9827f1a5a855e4ab6787fdc07b624ccf74d70acf3e807c74e07a3becd3eea7516ab3745a29be2b7c45a0ed2f1130643c0c5dec343c1ccd9d46f6ef8f7aef0589596a8f49f03b6b476a13ed4d1fd2fce067458124e4a133d2024821004652e7eb4fc63848899bd60de1dc193c2ee1031ffee5fcce6a25324f3bd93dcfc2a7ab5feb7a7acf293061a6a25e37375861c083cf5dbf80b93f0d03679d81a84cc4288b8c283a6c218afd9b15959204870028c0b7469e3f5b16b0239a01d71e83ff8ab8165fe65f7da96b20b837b92451108a2f1f8ee6e07cfc0feaf58475d72ec273a4970f90fb9fbc7becc89325a8ff50e627b7cfff6245c0ffedc8173f62bc98fc20c91402255efc94ba84d5fe06c9823173434eff2e18033749df293435c3505a05f275205a2b09d3690126706166b072a4d6942778f5ab12e394a1ecc2fdaf86c53433d9b17b65758927dd1d14908265189fd85414fd00a7d15ec4d3017f996e9e0f07388300a903057a0e53042751ab976ccc8a7c3399bf9657683086c41e52eac2671993e429c657f1669ea914303e7b273b615e96e80d6384d8e7fe82bbd6359df82b11cb4fd22f1b9df9213cc0bcec7175352f7c6054145b2f634e22dc2583b68339a95fefae2b266107b93df1f9452a3faa566e99650d107afb32228416bb54ad6dd634b75e43af3e433043d2e9158c96a1432ac02dd0b56fdffa3b6a294c6890ae8c28a7b5d20b9cbe5ef2c23f57f01c05ff870da908598c8f919f4fcf0a779d833dcdf7800bbeb04dc41b826981917c55abc1c10e68a44a02c80c14f379c4b70e3a84ef56905e15676e7072137451c1dd5ce948236db3f47f2a73083b6b25bb665ec6f1c4c56c6fee9831423c367e466b046be136b507908eba88ff679d4d04cbf8b41008b34f9e70b173d063d67667d60454d1c3307b780d700232a66559ad1f2007a56543f0e4aa8b0e015d103d0f414af12c2ccc20edcd0c01bff95c3de05482bf397ce5de88aaeaf20';
      const pubSignals = ["0x15d43e90d1f4eb13959d17eb6453778007b6f24127495e0d49a0d43e1479b206","0x18f34b00e054aa3dd41cd7fd6690d984c37c929fa3ecffab89c2e6e2b4506650"];
      expect(await verifier.verifyProof(proof, pubSignals)).to.equal(true)
    });

    it("Should fail to verify an incorrect proof", async function () {
      const verifier = await loadFixture(
        deployVerifier
      );
      // This is a invalid proof
      const proof = '0x3adabe6276ed6f9eca06f4e2c5634a1b8dc053ec1e6687fed4427e435fd599912d067e82d77ae9f58c7567adccac801bac9d5be9da64ef64aed54f81198bfa6321fbe9b93a83a4492a032ed70e370231328ef9827f1a5a855e4ab6787fdc07b624ccf74d70acf3e807c74e07a3becd3eea7516ab3745a29be2b7c45a0ed2f1130643c0c5dec343c1ccd9d46f6ef8f7aef0589596a8f49f03b6b476a13ed4d1fd2fce067458124e4a133d2024821004652e7eb4fc63848899bd60de1dc193c2ee1031ffee5fcce6a25324f3bd93dcfc2a7ab5feb7a7acf293061a6a25e37375861c083cf5dbf80b93f0d03679d81a84cc4288b8c283a6c218afd9b15959204870028c0b7469e3f5b16b0239a01d71e83ff8ab8165fe65f7da96b20b837b92451108a2f1f8ee6e07cfc0feaf58475d72ec273a4970f90fb9fbc7becc89325a8ff50e627b7cfff6245c0ffedc8173f62bc98fc20c91402255efc94ba84d5fe06c9823173434eff2e18033749df293435c3505a05f275205a2b09d3690126706166b072a4d6942778f5ab12e394a1ecc2fdaf86c53433d9b17b65758927dd1d14908265189fd85414fd00a7d15ec4d3017f996e9e0f07388300a903057a0e53042751ab976ccc8a7c3399bf9657683086c41e52eac2671993e429c657f1669ea914303e7b273b615e96e80d6384d8e7fe82bbd6359df82b11cb4fd22f1b9df9213cc0bcec7175352f7c6054145b2f634e22dc2583b68339a95fefae2b266107b93df1f9452a3faa566e99650d107afb32228416bb54ad6dd634b75e43af3e433043d2e9158c96a1432ac02dd0b56fdffa3b6a294c6890ae8c28a7b5d20b9cbe5ef2c23f57f01c05ff870da908598c8f919f4fcf0a779d833dcdf7800bbeb04dc41b826981917c55abc1c10e68a44a02c80c14f379c4b70e3a84ef56905e15676e7072137451c1dd5ce948236db3f47f2a73083b6b25bb665ec6f1c4c56c6fee9831423c367e466b046be136b507908eba88ff679d4d04cbf8b41008b34f9e70b173d063d67667d60454d1c3307b780d700232a66559ad1f2007a56543f0e4aa8b0e015d103d0f414af12c2ccc20edcd0c01bff95c3de05482bf397ce5de88aaeaf20';
      const pubSignals = ["0x15d43e90d1f4eb13959d17eb6453778007b6f24127495e0d49a0d43e1479b206","0x18f34b00e054aa3dd41cd7fd6690d984c37c929fa3ecffab89c2e6e2b4506650"];
      expect(await verifier.verifyProof(proof, pubSignals)).to.equal(false)
    });
  });
});